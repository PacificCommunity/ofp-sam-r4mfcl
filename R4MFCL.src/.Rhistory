library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
?ggplot2::geom_point
?ggplot2::guide_legend
source("https://bioconductor.org/biocLite.R")
biocLite()
paste("aa ","bb")
library(R4MFCL)
?stop
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
?prettyNum
install.packages(c("readr", "tidyr"))
install.packages("tidyr")
install.packages("tidyverse")
install.packages("readr")
install.packages("readr")
library(R4MFCL)
?file
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
install.packages("rlang")
install.packages("rlang")
library(R4MFCL)
library(R4MFCL)
install.packages("tibble")
library(R4MFCL)
library(R4MFCL)
install.packages(c("Deriv", "glue", "wrapr"))
.libPaths()
require
ip<-installed.packages()
ip[colnames(ip)=="dplyr",]
install.packages(c("dplR", "dplRCon"))
install.packages("dplyr")
library(dplyr)
library(japanese)
.libPaths()
?read.csv
yr<-2003:2010
qt<-1:4
rbin(yr,qt)
rbind(yr,qt)
cbind(yr,qt)
?rep
?seq
?rep
seq(2003:2010,each=4)
seq(from=2003,to=2010,each=4)
rep(x=2003:2010,each=4)
yr<-rep(x=2003:2010,each=4)
cbind(yr,qt)
yr<-rep(x=2003:2010,each=4)
?system
library(R4MFCL)
library(R4MFCL)
install.packages("optextras")
install.packages(c("LBSPR", "RcppCCTZ", "RSQLite", "statmod", "XML"))
install.packages(c("optparse", "optpart"))
(1:12)%%3
(1:12-1)%%3
(1:12-1)%/%3
(1:12-1)%/%3+1
?object.size
install.packages(c("bindrcpp", "bindr"))
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
?scanText
library(R4MFCL)
library(R4MFCL)
library(R4MFCL)
list.files()
?ggplot2::ggsave
magrittr::debug_pipe
?magrittr::debug_pipe
?as.data.frame
?ggplot2::ggsave
?boxplot
?file.copy
install.packages(c("coin", "cubature", "DLMtool", "dplyr", "git2r", "igraph", "optparse", "Rvmmin"))
install.packages("ggjoy")
install.packages("dplyr")
library(dplyr)
install.packages(c("DLMtool", "git2r", "igraph"))
install.packages("huxtable")
library(huxtable)
ht <- hux(
Employee = c('John Smith', 'Jane Doe', 'David Hugh-Jones'),
Salary = c(50000, 50000, 40000),
add_colnames = TRUE
)
bold(ht)[1,]           <- TRUE
bottom_border(ht)[1,]  <- 1
align(ht)[,2]          <- 'right'
right_padding(ht)      <- 10
left_padding(ht)       <- 10
width(ht)              <- 0.35
ht
str(ht)
install.packages("stargazer")
?cbind
?warnings
?merge
df1 <- data.frame(V1=c(1.5,7.4),
V2=c(6.7,8.8),
sim=c(1,2))
library(dplyr)
df1 %>%
gather(key=sim, value=V1:V2)
library(tidyr)
df1 %>%
gather(key=sim, value=V1:V2)
df1 %>%
gather(key=sim, value,V1:V2)
df1 %>%
gather(sim1, Value, V1:V2) %>%
select(-sim1)
?gather
df <- data.frame(Year = c(1999, 2002, 2005, 2008),
CA = c(3931.120, 4273.710, 4601.415, 4101.321),
MD = c(346.82000, 134.30882, 130.43038, 88.27546))
df2 <- data.frame(Year = c(1999, 2002, 2005, 2008, 1999, 2002, 2005, 2008),
State = c("CA", "CA", "CA", "CA", "MD", "MD", "MD", "MD"),
Total = c(3931.120, 4273.710, 4601.415, 4101.321, 346.82000, 134.30882, 130.43038, 88.27546))
df
gather(df, key = State, Value = Total, -Year)
gather(data, key, value, ..., na.rm = FALSE, convert = FALSE, factor_key = FALSE)
df <- data.frame(x = c("a", "b", "c","d","e"),
path1=c("test1","test1","test2","test2","test3"),
path2=c("testa","","testg","testd",""))
df
df %>%
gather(path, Pathway, path1, path2)
df %>%
gather(key=path, Pathway, path1, path2)
df %>%
gather(key=path, value=Pathway, path1, path2)
?geom_line
?ggplot2::geom_line
?ggsave
?ggplot2::ggsave
?memory
?Memory
?ggplot2::autoplot
color(1:7)
colors(1:7)
alpha(colors()[2:5],0.6)
scales::alpha(colors()[2:5],0.6)
colors()[1:20]
colors()
grep(colors(),"green",value=TRUE)
grep(colors(),pattern="green",value=TRUE)
install.packages(c("bayesAB", "curl", "devEMF", "FSA", "ggjoy", "modelr", "nimble", "plotly", "plumber", "sandwich", "sjstats", "sparklyr", "stringdist", "VGAM", "withr", "wrapr"))
72*0.31
22/72
23/72
grep(colors(),"green",value=TRUE)
grep(colors(),pattern="green",value=TRUE)
?aggregate
colors()[1:7]
hsv(0.75, 1:64/64, 0.8, 1)
1:64/64
?ggplot2::ggsave
?ggplot2::guide_legend
?ggplot2::guide
?ggplot2::guides
colors()[1:4]
?savePlot
install.packages("viridis")
cols0 = colorRamp(c("#0080ff","white","#ff8000"))
rgb(cols0(0:99/99)/255)
cols = colorRamp(c("#0080ff","white","#ff8000"))
plot(NULL, xlim=c(0,100), ylim=c(0,1), axes=FALSE, xlab="", ylab="")
rect(0:99, 0, 1:100, 1, col=rgb(cols(0:99/99)/255), border=NA)
cm.colors(12)
pie(rep(1,12),cm.colors(12))
pie(rep(1, 12), col = cm.colors(12))
?data.frame
?basename
install.packages(c("desc", "devtools", "DLMtool", "ggjoy", "nimble", "purrr", "replyr", "RODBCext", "rstantools", "shinystan", "stringdist", "visNetwork"))
library(R4MFCL)
library(R4MFCL)
install.packages(c("ggformula", "ggforce", "ggfortify"))
install.packages("rstansim")
install.packages("githubinstall")
githubinstall::gh_install_packages("config")
config::get()
install.packages("configr")
install.packages(c("colourpicker", "lme4", "reticulate", "tensorflow"))
install.packages(c("lme4", "reticulate", "tensorflow"))
install.packages("lme4")
install.packages(c("doParallel", "dplyr", "lme4", "Rcpp", "reticulate", "tensorflow"))
install.packages(c("dplyr", "Rcpp"))
install.packages("roxygen2")
library(R4MFCL)
install.packages("ggExtra")
?cbind
rbind(a = 1, b = 1:3)
install.packages("officer")
install.packages("wordR")
install.packages("WordR")
install.packages(c("MCMCglmm", "rvg"))
install.packages(c("curl", "MCMCglmm", "officer", "rvg", "tfruns"))
install.packages(c("data.table", "tidyselect"))
install.packages(c("data.table", "RcppArmadillo", "tidyselect"))
library(R4MFCL)
install.packages(c("nimble", "Nippon", "RcppEigen"))
